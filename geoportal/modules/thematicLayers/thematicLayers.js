/*version message*/var thematicBaseLayer;var thematicServiceURL;var thematicAuthentication;var thematicNodeIndexLayer;var thematicLayers_SLD_ID=1;var thematicLayers_SLD_ID_EDIT="";var thematicLayers_SLD_add_criteria_count=0;var thematicLayers_SLD_XML="";var thematicLayers_SelectedSLD_ID=1;var thematicLayers_BaseNameLayerId="";var thematicLayers_TreeMapNodeId="";var thematicLayers_SelectedSLD_ID_EDIT="";var thematicLayers_fileBased=false;var thematicLayers_attributes_columns=['name','type','value','translation'];var thematicLayers_grid_record =Ext.data.Record.create([			{name: "sld_id", type: "string"},			{name: "sld_full_id", type: "string"},			{name: "graphicLegend", type: "string"},			{name: "sld", type: "string"},			{name: "title", type: "string"},			{name: "styleobejct", type: "object"}		]);		var thematicLayers_attributes_store=new Ext.data.Store({			url:"php_source/proxies/getAttributes.php?lang="+language,			reader: new Ext.data.JsonReader({			root: 'rows',			totalProperty: 'results'			}, 			thematicLayers_attributes_columns		),		listeners: {			beforeload: function(){					this.baseParams.service = thematicServiceURL;					this.baseParams.layer = thematicBaseLayer;					this.baseParams.service_authenication=thematicAuthentication;			}		}	});	var thematicLayers_style_store_column=[	{name: 'sld_id'},	{name: 'sld_full_id'},	{name: 'graphicLegend'},	{name: 'sld'},	{name: 'title'},	{name: 'service_tupe'},	{name: 'styleobejct'}];var thematicLayers_style_grid_store= new Ext.data.ArrayStore({    fields: thematicLayers_style_store_column});var thematicLayers_style_grid_tmp_store= new Ext.data.ArrayStore({    fields: thematicLayers_style_store_column});var thematicLayers_SLD_attributes_store=new Ext.data.Store({			url:"php_source/proxies/getAttributes.php?lang="+language,			reader: new Ext.data.JsonReader({			root: 'rows',			totalProperty: 'results'			}, 			thematicLayers_attributes_columns		),		listeners: {			beforeload: function(){					this.baseParams.service = thematicServiceURL;					this.baseParams.layer = thematicBaseLayer;					this.baseParams.service_authenication=thematicAuthentication;			}		}	});var sm = new Ext.grid.CheckboxSelectionModel({		singleSelect:true	});var thematicLayers_style_grid_columns=new Ext.grid.ColumnModel([		sm,		{header:'',dataIndex: "sld_id",hidden:true},		{header:'',dataIndex:"graphicLegend",renderer:thematicLayers_style_grid_ColumnIcon,width:40},        {header:'',dataIndex: "sld",hidden:true},        {header:thematicLayerTabGeneral_Title,dataIndex: "title",width:120},        {dataIndex: "styleobejct",hidden:true}]);function thematicLayers_style_grid_ColumnIcon(v, p, rec, rowIndex, colIndex, store){	var img='<img src="'+v+'" width="24px" height="24px">';		return img;}function thematicLayer_PopulateGridForEdit(){	thematicLayers_style_grid_store.clearFilter(true);		thematicLayers_style_grid_store.filter('sld_full_id', thematicLayers_SLD_ID_EDIT);		thematicLayers_style_grid_tmp_store.data.clear();		thematicLayers_style_grid_store.each(function(record){				var copyRecord = new thematicLayers_grid_record({				sld_id:record.get("sld_id"),				sld_full_id:record.get("sld_full_id"),				graphicLegend:record.get("graphicLegend"),				sld:record.get("sld"),				title:record.get("title"),				styleobejct:record.get("styleobejct")		});				thematicLayers_style_grid_tmp_store.add(copyRecord);				thematicLayers_style_grid_tmp_store.commitChanges();	});		Ext.getCmp('thematicLayer_grid').reconfigure(thematicLayers_style_grid_tmp_store,thematicLayers_style_grid_columns);	}var thematicLayer=new Ext.Window({ 	width:720,	height:420,	modal:true,	minimizable: true,	resizable:true,	title:thematicLayerWindowTitle,	closeAction:'hide',	plain:true,	layout:'border',	listeners:{		show:function(){						if (thematicLayers_SLD_ID_EDIT=="")			{				thematicLayers_SLD_ID_EDIT=0;			}									thematicLayers_SLD_attributes_store.load();						thematicLayers_attributes_store.load();						thematicLayer_PopulateGridForEdit();					},		hide:function(){					thematicLayers_SLD_ID_EDIT=0;					}		},	bbar:{		items:['->',{			xtype:'button',			text:thematicLayerBtnAddToMap,			handler:function(){								thematicLayers_LayerTitle_Window.show();			}		},{			xtype:'button',			text:thematicLayerBtnClose,			handler:function(){				thematicLayer.hide();			}		}]	},	items:[{			xtupe:'panel',			region:'west',			width:200,			layout:'fit',			items:[{				xtype:'grid',				sm: sm,				id:'thematicLayer_grid',				autoScroll:true,				columnLines: true,				ds:thematicLayers_style_grid_tmp_store,				cm:thematicLayers_style_grid_columns						}]		},		{			xtype:'tabpanel',			activeItem: 0,			id:'thematicLayers_tabPanel_id',			region:'center',			bbar:['->',			{				xtype:'button',				text:thematicLayerBtnSaveRule,				handler:function(){										thematicLayers_addRule();									}			},			{				xtype:'button',				text:thematicLayerBtnRemoveRule,				id:'thematicLayerBtnRemoveRule_id',				disabled:true,				handler: function(){									thematicLayers_deleteRule();				}			},			{				xtype:'button',				text:thematicLayerBtnClearRule,				handler:function(){					thematicLayers_AddNewRuleClearAll();				}						}],			listeners:{				tabchange:function(tabPanel, tab){										if(tab.id=="thematicLayer_SLD_Rule")					{						Ext.getCmp('thematicLayer_SLD_textarea').setValue(thematicLayers_CreateRuleSLDXML());					}					if(tab.id=="thematicLayer_SLD_All")					{						Ext.getCmp('thematicLayer_SLD_All_textarea').setValue(thematicLayers_CreateAllSLDXML());					}				}						},			items:[{					xtype:'form',					title:thematicLayerTabGeneral,					border:1,					forceFit:true,					autoScroll:true,					items:[{						xtype:'textfield',						fieldLabel:thematicLayerTabGeneral_Name,						id:'thematicLayer_Rule_Name',						width:300					},					{						xtype:'textfield',						fieldLabel:thematicLayerTabGeneral_Title,						id:'thematicLayer_Rule_Title',						width:300					},					{						xtype:'textarea',						fieldLabel:thematicLayerTabGeneral_Abstract,						id:'thematicLayer_Rule_Abstract',						width:300										},					{						xtype:'combo',						fieldLabel:thematicLayerTabGeneral_ChooseGeometry,						id:'thematicLayerTabGeneral_ChooseGeometry_id',						emptyText:'',						store: new Ext.data.SimpleStore({							fields: ['name','value'],							data: [[thematicLayerTabGeneral_ChoosePoint,"point"],							[thematicLayerTabGeneral_ChoosePolygon,"polygon"],							[thematicLayerTabGeneral_ChooseLine,"line"]]}						),						displayField: 'name',						valueField: 'value',						forceSelection: true,						triggerAction: 'all',						selectOnFocus: false,						mode: 'local',						editable: false,						listeners:{							select:function(combo,record){																Ext.getCmp("thematicLayer_BasicStyler").removeAll();								Ext.getCmp("thematicLayer_BasicStyler").doLayout();																var thematicLayer_BasicStylerChoice=record.get("value");																switch (thematicLayer_BasicStylerChoice)								{									case "point":										Ext.getCmp('thematicLayer_BasicStyler').add(thematicLayers_PointPanel());									break;																	case "polygon":										Ext.getCmp('thematicLayer_BasicStyler').add(thematicLayers_PolygonPanel());									break;																		case "line":										Ext.getCmp('thematicLayer_BasicStyler').add(thematicLayers_LinePanel());									break;																}																Ext.getCmp("thematicLayer_BasicStyler").doLayout();														}						}					},					{						xtype:'panel',						id:'thematicLayer_BasicStyler',						border:false,						items:[]					}]				},				{					xtype:'form',					title:thematicLayerTabLabel,					items:[{						xtype:'combo',						fieldLabel:thematicLayerTabLabel_Attributes,						id:'thematicLayer_Label_Attribute_id',						loadMask:true,						autoScroll:true,						displayField: 'translation',						valueField: 'name',						autoShow: true,						store:thematicLayers_SLD_attributes_store,						selectOnFocus: true,						triggerAction:'all',						mode: 'remote',						editable: false					},					{						xtype:'combo',						fieldLabel:thematicLayerTabLabel_FontFamily,						id:'thematicLayer_Label_FontFamily_id',						emptyText:"",						store: new Ext.data.SimpleStore({							fields: ['name','value'],							data: [["Serif","Serif"],["SansSerif","SansSerif"],["Arial","Arial"],["Courier New","Courier New"],["Tahoma","Tahoma"],["Times New Roman","Times New Roman"],["Verdana","Verdana"]]}						),						displayField: 'name',						valueField: 'value',						forceSelection: true,						triggerAction: 'all',						selectOnFocus: false,						mode: 'local',						editable: false																	},					{						xtype:'combo',						fieldLabel:thematicLayerTabLabel_FontSize,						id:'thematicLayer_Label_FontSize_id',						emptyText:"",						store: new Ext.data.SimpleStore({							fields: ['name','value'],							data: [["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["14","14"],["15","15"],["16","16"],["17","17"],["18","18"]]}						),						displayField: 'name',						valueField: 'value',						width:50,						forceSelection: true,						triggerAction: 'all',						selectOnFocus: false,						mode: 'local',						editable: false					},					{						xtype:'textfield',						fieldLabel:thematicLayerTabLabel_FontColor,						id:'thematicLayer_Label_FontColor_id',						width:100,						listeners:{							'focus':function(el)							{								showColorpickerWindow(el.id,el.getValue());							}												}					}]				},				{					xtype:'panel',					title:thematicLayerTabCriteria,					forceFit:true,					autoScroll:true,					id:'thematicLayers_SLDCriteria_panel_id',					bbar:['->',{						xtype:'button',						text:thematicLayerSLDBtnAddCriteria,						handler:function(){							thematicLayers_addSLDRowCriteria(false);						}					}]				},				{					xtype:'panel',					title:thematicLayerTabSLD,					id:'thematicLayer_SLD_Rule',					layout:'fit',					items:[{						xtype:'textarea',						id:'thematicLayer_SLD_textarea',						anchor:'100%'					}]				},				{					xtype:'panel',					title:thematicLayerTabSLD_All,					layout:'fit',					id:'thematicLayer_SLD_All',					items:[{						xtype:'textarea',						id:'thematicLayer_SLD_All_textarea',						anchor:'100%'					}]				}]		}]});Ext.getCmp('thematicLayer_grid').getSelectionModel().on('rowselect', function(sm, rowIdx, record) {			thematicLayers_SelectedSLD_ID_EDIT=record.data.sld_id;		thematicLayers_EditSLD(record);		Ext.getCmp('thematicLayerBtnRemoveRule_id').enable();});function thematicLayers_AddNewRuleClearAll(){	Ext.getCmp('thematicLayer_Rule_Name').setValue("");	Ext.getCmp('thematicLayer_Rule_Title').setValue("");	Ext.getCmp('thematicLayer_Rule_Abstract').setValue("");		Ext.getCmp("thematicLayer_BasicStyler").removeAll();	Ext.getCmp("thematicLayer_BasicStyler").doLayout();		Ext.getCmp('thematicLayer_Label_Attribute_id').setValue("");	Ext.getCmp('thematicLayer_Label_FontFamily_id').setValue("");	Ext.getCmp('thematicLayer_Label_FontSize_id').setValue("");	Ext.getCmp('thematicLayer_Label_FontColor_id').setValue("");		Ext.getCmp('thematicLayers_SLDCriteria_panel_id').removeAll();	Ext.getCmp('thematicLayers_SLDCriteria_panel_id').doLayout();		thematicLayers_SLD_add_criteria_count=0;		thematicLayers_SelectedSLD_ID_EDIT=0;}function thematicLayers_EditSLD(record){	Ext.getCmp('thematicLayer_Rule_Name').setValue(record.data.styleobejct.thematicLayer_Rule_Name);	Ext.getCmp('thematicLayer_Rule_Title').setValue(record.data.styleobejct.thematicLayer_Rule_Title);	Ext.getCmp('thematicLayer_Rule_Abstract').setValue(record.data.styleobejct.thematicLayer_Rule_Abstract);		Ext.getCmp("thematicLayer_BasicStyler").removeAll();	Ext.getCmp("thematicLayer_BasicStyler").doLayout();	switch (record.data.styleobejct.thematicLayer_Geometry_Type)	{		case "point":					Ext.getCmp('thematicLayer_BasicStyler').add(thematicLayers_PointPanel());			Ext.getCmp('thematicLayer_BasicStyler').doLayout();						Ext.getCmp('thematicLayer_Point_Symbol_FieldSet_Id').expand();			Ext.getCmp('thematicLayer_Point_Symbol').setValue(record.data.styleobejct.thematicLayer_Symbol);			Ext.getCmp('thematicLayer_Point_Size').setValue(record.data.styleobejct.thematicLayer_Size);			Ext.getCmp('thematicLayer_Point_Rotation').setValue(record.data.styleobejct.thematicLayer_Rotation);			Ext.getCmp('thematicLayer_Point_Fill_FieldSet_Id').expand();			Ext.getCmp('thematicLayer_Point_Fill_Color').setValue(record.data.styleobejct.thematicLayer_Fill_Color);			Ext.getCmp('thematicLayer_Point_Fill_Opacity').setValue(record.data.styleobejct.thematicLayer_Fill_Opacity);			Ext.getCmp('thematicLayer_Point_Stroke_FieldSet_Id').expand();			Ext.getCmp('thematicLayer_Point_Stroke_Style').setValue(record.data.styleobejct.thematicLayer_Stroke_Style);			Ext.getCmp('thematicLayer_Point_Stroke_Color').setValue(record.data.styleobejct.thematicLayer_Stroke_Color);			Ext.getCmp('thematicLayer_Point_Stroke_Width').setValue(record.data.styleobejct.thematicLayer_Stroke_Width);			Ext.getCmp('thematicLayer_Point_Stroke_Opacity').setValue(record.data.styleobejct.thematicLayer_Stroke_Opacity);								break;			case "polygon":					Ext.getCmp('thematicLayer_BasicStyler').add(thematicLayers_PolygonPanel());			Ext.getCmp('thematicLayer_BasicStyler').doLayout();						Ext.getCmp('thematicLayer_Polygon_Fill_FieldSet_Id').expand();			Ext.getCmp('thematicLayer_Polygon_Fill_Symbol').setValue(record.data.styleobejct.thematicLayer_Symbol);			Ext.getCmp('thematicLayer_Polygon_Fill_Color').setValue(record.data.styleobejct.thematicLayer_Fill_Color);			Ext.getCmp('thematicLayer_Polygon_Fill_Opacity').setValue(record.data.styleobejct.thematicLayer_Fill_Opacity);			Ext.getCmp('thematicLayer_Polygon_Stroke_FieldSet_Id').expand();			Ext.getCmp('thematicLayer_Polygon_Stroke_Style').setValue(record.data.styleobejct.thematicLayer_Stroke_Style);			Ext.getCmp('thematicLayer_Polygon_Stroke_Color').setValue(record.data.styleobejct.thematicLayer_Stroke_Color);			Ext.getCmp('thematicLayer_Polygon_Stroke_Width').setValue(record.data.styleobejct.thematicLayer_Stroke_Width);			Ext.getCmp('thematicLayer_Polygon_Stroke_Opacity').setValue(record.data.styleobejct.thematicLayer_Stroke_Opacity);							break;				case "line":					Ext.getCmp('thematicLayer_BasicStyler').add(thematicLayers_LinePanel());			Ext.getCmp('thematicLayer_BasicStyler').doLayout();						Ext.getCmp('thematicLayer_Line_Stroke_FieldSet_Id').expand();			Ext.getCmp('thematicLayer_Line_Stroke_Style').setValue(record.data.styleobejct.thematicLayer_Stroke_Style);			Ext.getCmp('thematicLayer_Line_Stroke_Color').setValue(record.data.styleobejct.thematicLayer_Stroke_Color);			Ext.getCmp('thematicLayer_Line_Stroke_Width').setValue(record.data.styleobejct.thematicLayer_Stroke_Width);			Ext.getCmp('thematicLayer_Line_Stroke_Opacity').setValue(record.data.styleobejct.thematicLayer_Stroke_Opacity);					break;	}		Ext.getCmp('thematicLayer_Label_Attribute_id').setValue(record.data.styleobejct.thematicLayer_Label_Attribute);	Ext.getCmp('thematicLayer_Label_FontFamily_id').setValue(record.data.styleobejct.thematicLayer_Label_FontFamily);	Ext.getCmp('thematicLayer_Label_FontSize_id').setValue(record.data.styleobejct.thematicLayer_Label_FontSize);	Ext.getCmp('thematicLayer_Label_FontColor_id').setValue(record.data.styleobejct.thematicLayer_Label_FontColor);		thematicLayers_SLD_add_criteria_count=record.data.styleobejct.thematicLayer_SLD_Criteria.length;		Ext.getCmp('thematicLayers_SLDCriteria_panel_id').removeAll();	Ext.getCmp('thematicLayers_SLDCriteria_panel_id').doLayout();		var thematicLayers_SLD_add_criteria_counttmp=thematicLayers_SLD_add_criteria_count;		var criteria=record.data.styleobejct.thematicLayer_SLD_Criteria;		thematicLayers_SLD_add_criteria_count=0;		if(thematicLayers_SLD_add_criteria_counttmp>0)	{		Ext.getCmp('thematicLayers_tabPanel_id').setActiveTab(2);				for (var i=0;i<thematicLayers_SLD_add_criteria_counttmp;i++)		{			thematicLayers_addSLDRowCriteria(true);						var current_criteria=criteria[i];						Ext.getCmp('thematicLayersSLD_criteria_att_name_'+i).setValue(current_criteria.thematicLayersSLD_criteria_att_name);			Ext.getCmp('thematicLayersSLD_criteria_contition_'+i).setValue(current_criteria.thematicLayersSLD_criteria_contition);			Ext.getCmp('thematicLayersSLD_criteria_value_'+i).setValue(current_criteria.thematicLayersSLD_criteria_value);			Ext.getCmp('thematicLayersSLD_andor_'+i).setValue(current_criteria.thematicLayersSLD_andor);		}			}		Ext.getCmp('thematicLayers_tabPanel_id').setActiveTab(0);	}function thematicLayers_CreateAllSLDXML(){	var sld="<?xml version='1.0' encoding='UTF-8'?>";	sld+="\r\n<StyledLayerDescriptor version='1.0.0' xsi:schemaLocation='http://www.opengis.net/sld StyledLayerDescriptor.xsd' xmlns='http://www.opengis.net/sld' xmlns:ogc='http://www.opengis.net/ogc' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>";	sld+='\r\n';	sld+='\t';	sld+='<NamedLayer>';	sld+='\r\n';	sld+='\t';		sld+='\t';		sld+='<Name>'+thematicBaseLayer+'</Name>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='<UserStyle>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='<Title>Style Title</Title>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='<Abstract>Style Abstract</Abstract>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='<FeatureTypeStyle>';	sld+=thematicLayers_CreateStyleAllSLD();	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='</FeatureTypeStyle>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='</UserStyle>';	sld+='\r\n';	sld+='\t';	sld+='</NamedLayer>';	sld+='\r\n';	sld+='</StyledLayerDescriptor>';		return sld;	}function thematicLayers_CreateStyleAllSLD(){	var output="";	thematicLayers_style_grid_tmp_store.each(function(record){		output+=record.get("sld");	});	return output;}function thematicLayers_CreateRuleSLDXML(){	var sld="<?xml version='1.0' encoding='ISO-8859-1'?>";	sld+="\r\n<StyledLayerDescriptor version='1.0.0' xsi:schemaLocation='http://www.opengis.net/sld StyledLayerDescriptor.xsd' xmlns='http://www.opengis.net/sld' xmlns:ogc='http://www.opengis.net/ogc' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>";	sld+='\r\n';	sld+='\t';	sld+='<NamedLayer>';	sld+='\r\n';	sld+='\t';		sld+='\t';		sld+='<Name>'+thematicBaseLayer+'</Name>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='<UserStyle>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='<Title>Style Title</Title>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='<Abstract>Style Abstract</Abstract>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='<FeatureTypeStyle>';				var thematicLayer_choosed_type=Ext.getCmp('thematicLayerTabGeneral_ChooseGeometry_id').getValue();		switch (thematicLayer_choosed_type)	{		case "point":					sld+=thematicLayers_PointSLD();		break;			case "polygon":			sld+=thematicLayers_PolygonSLD();		break;				case "line":			sld+=thematicLayers_LineSLD();		break;	}				sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='</FeatureTypeStyle>';	sld+='\r\n';	sld+='\t';		sld+='\t';			sld+='\t';			sld+='</UserStyle>';	sld+='\r\n';	sld+='\t';	sld+='</NamedLayer>';	sld+='\r\n';	sld+='</StyledLayerDescriptor>';		return sld;	}function thematicLayers_deleteRule(){		if (thematicLayers_SelectedSLD_ID_EDIT>=1)	{		Ext.MessageBox.confirm(thematicLayerBtnRemoveRule_Alert,thematicLayerBtnRemoveRule_Msg,function(ans){								if (ans=="yes")			{					var deletedIndex = thematicLayers_style_grid_tmp_store.find('sld_id', thematicLayers_SelectedSLD_ID_EDIT);								thematicLayers_style_grid_tmp_store.removeAt(deletedIndex);								thematicLayers_style_grid_tmp_store.commitChanges();								Ext.getCmp('thematicLayer_grid').reconfigure(thematicLayers_style_grid_tmp_store,thematicLayers_style_grid_columns);								thematicLayers_AddNewRuleClearAll();								Ext.getCmp('thematicLayerBtnRemoveRule_id').disable();								thematicLayers_SLD_add_criteria_count=0;			}					});	}		}function thematicLayers_addRule(){	var thematicLayer_Rule_Name="";	var thematicLayer_Rule_Title="";	var thematicLayer_Rule_Abstract="";	var thematicLayer_Symbol="";	var thematicLayer_Size="";	var thematicLayer_Rotation="";	var thematicLayer_Fill_Color="";	var thematicLayer_Fill_Opacity="";	var thematicLayer_Stroke_Style="";	var thematicLayer_Stroke_Color="";	var thematicLayer_Stroke_Width="";	var thematicLayer_Stroke_Opacity="";	var thematicLayer_SLD_Criteria="";	var thematicLayer_Label_Attribute="";	var thematicLayer_Label_FontFamily="";	var thematicLayer_Label_FontSize="";	var thematicLayer_Label_FontColor="";	thematicLayer_Rule_Name=Ext.getCmp('thematicLayer_Rule_Name').getValue();	thematicLayer_Rule_Title=Ext.getCmp('thematicLayer_Rule_Title').getValue();	thematicLayer_Rule_Abstract=Ext.getCmp('thematicLayer_Rule_Abstract').getValue();		if ((thematicLayer_Rule_Name.trim()=="") && (thematicLayer_Rule_Title.trim()==""))	{		Ext.Msg.alert(thematicLayerTabGeneral_NoTilteOrNameAlert, thematicLayerTabGeneral_NoTilteOrNameMsg);	}	else	{		var thematicLayer_choosed_type=Ext.getCmp('thematicLayerTabGeneral_ChooseGeometry_id').getValue();		var thematicLayer_this_sld="";						switch (thematicLayer_choosed_type)		{			case "point":							//Ext.getCmp('thematicLayer_Point_Symbol_FieldSet_Id')				thematicLayer_Symbol=Ext.getCmp('thematicLayer_Point_Symbol').getValue();				thematicLayer_Size=Ext.getCmp('thematicLayer_Point_Size').getValue();				thematicLayer_Rotation=Ext.getCmp('thematicLayer_Point_Rotation').getValue();				//Ext.getCmp('thematicLayer_Point_Fill_FieldSet_Id')				thematicLayer_Fill_Color=Ext.getCmp('thematicLayer_Point_Fill_Color').getValue();				thematicLayer_Fill_Opacity=Ext.getCmp('thematicLayer_Point_Fill_Opacity').getValue();				//Ext.getCmp('thematicLayer_Point_Stroke_FieldSet_Id')				thematicLayer_Stroke_Style=Ext.getCmp('thematicLayer_Point_Stroke_Style').getValue();				thematicLayer_Stroke_Color=Ext.getCmp('thematicLayer_Point_Stroke_Color').getValue();				thematicLayer_Stroke_Width=Ext.getCmp('thematicLayer_Point_Stroke_Width').getValue();				thematicLayer_Stroke_Opacity=Ext.getCmp('thematicLayer_Point_Stroke_Opacity').getValue();				thematicLayer_this_sld=thematicLayers_PointSLD();							break;					case "polygon":							//Ext.getCmp('thematicLayer_Polygon_Fill_FieldSet_Id')				thematicLayer_Symbol=Ext.getCmp('thematicLayer_Polygon_Fill_Symbol').getValue();				thematicLayer_Fill_Color=Ext.getCmp('thematicLayer_Polygon_Fill_Color').getValue();				thematicLayer_Fill_Opacity=Ext.getCmp('thematicLayer_Polygon_Fill_Opacity').getValue();				//Ext.getCmp('thematicLayer_Polygon_Stroke_FieldSet_Id')				thematicLayer_Stroke_Style=Ext.getCmp('thematicLayer_Polygon_Stroke_Style').getValue();				thematicLayer_Stroke_Color=Ext.getCmp('thematicLayer_Polygon_Stroke_Color').getValue();				thematicLayer_Stroke_Width=Ext.getCmp('thematicLayer_Polygon_Stroke_Width').getValue();				thematicLayer_Stroke_Opacity=Ext.getCmp('thematicLayer_Polygon_Stroke_Opacity').getValue();				thematicLayer_this_sld=thematicLayers_PolygonSLD();						break;						case "line":							//Ext.getCmp('thematicLayer_Line_Stroke_FieldSet_Id').getValue();				thematicLayer_Stroke_Style=Ext.getCmp('thematicLayer_Line_Stroke_Style').getValue();				thematicLayer_Stroke_Color=Ext.getCmp('thematicLayer_Line_Stroke_Color').getValue();				thematicLayer_Stroke_Width=Ext.getCmp('thematicLayer_Line_Stroke_Width').getValue();				thematicLayer_Stroke_Opacity=Ext.getCmp('thematicLayer_Line_Stroke_Opacity').getValue();				thematicLayer_this_sld=thematicLayers_LineSLD();			break;		}						var thematicLayer_Label_Attribute=Ext.getCmp('thematicLayer_Label_Attribute_id').getValue();		var thematicLayer_Label_FontFamily=Ext.getCmp('thematicLayer_Label_FontFamily_id').getValue();		var thematicLayer_Label_FontSize=Ext.getCmp('thematicLayer_Label_FontSize_id').getValue();		var thematicLayer_Label_FontColor=Ext.getCmp('thematicLayer_Label_FontColor_id').getValue();				var thematicLayer_SLD_Criteria=new Array();				if (thematicLayers_SLD_add_criteria_count>0)		{			for(var i=0;i<thematicLayers_SLD_add_criteria_count;i++)			{				thematicLayer_SLD_Criteria[i]={					"thematicLayersSLD_criteria_att_name":Ext.getCmp('thematicLayersSLD_criteria_att_name_'+i).getValue(),					"thematicLayersSLD_criteria_contition":Ext.getCmp('thematicLayersSLD_criteria_contition_'+i).getValue(),					"thematicLayersSLD_criteria_value":Ext.getCmp('thematicLayersSLD_criteria_value_'+i).getValue(),					"thematicLayersSLD_andor":Ext.getCmp('thematicLayersSLD_andor_'+i).getValue()				};			}		}		var styleObject={			"thematicLayer_Rule_Name":thematicLayer_Rule_Name,			"thematicLayer_Rule_Title":thematicLayer_Rule_Title,			"thematicLayer_Rule_Abstract":thematicLayer_Rule_Abstract,			"thematicLayer_Symbol":thematicLayer_Symbol,			"thematicLayer_Size":thematicLayer_Size,			"thematicLayer_Rotation":thematicLayer_Rotation,			"thematicLayer_Fill_Color":thematicLayer_Fill_Color,			"thematicLayer_Fill_Opacity":thematicLayer_Fill_Opacity,			"thematicLayer_Stroke_Style":thematicLayer_Stroke_Style,			"thematicLayer_Stroke_Color":thematicLayer_Stroke_Color,			"thematicLayer_Stroke_Width":thematicLayer_Stroke_Width,			"thematicLayer_Stroke_Opacity":thematicLayer_Stroke_Opacity,			"thematicLayer_SLD_Criteria":thematicLayer_SLD_Criteria,			"thematicLayer_Label_Attribute":thematicLayer_Label_Attribute,			"thematicLayer_Label_FontFamily":thematicLayer_Label_FontFamily,			"thematicLayer_Label_FontSize":thematicLayer_Label_FontSize,			"thematicLayer_Label_FontColor":thematicLayer_Label_FontColor,			"thematicLayer_Geometry_Type":thematicLayer_choosed_type		}				var seperator="";				if (thematicAuthentication!="")		{			seperator="&";		}						var legendGraphic="php_source/proxies/legend_graphic.php?"+thematicAuthentication+seperator+"urlGraphic="+Ext.urlAppend(thematicServiceURL,"REQUEST=GetLegendGraphic&VERSION=1.1.1&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER="+thematicBaseLayer+"&SLD_BODY="+thematicLayers_CreateRuleSLDXML());				var service_type=mapPanel.layers.getAt(thematicNodeIndexLayer).get('service_type');				if (service_type!="WMS")		{			legendGraphic=legendGraphic.replace(/wfs/gm, 'wms');			legendGraphic=legendGraphic.replace(/WFS/gm, 'WMS');		}				//thematicServiceURL+"?REQUEST=GetLegendGraphic&VERSION=1.1.1&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER="+thematicBaseLayer+"&SLD_BODY="+thematicLayers_CreateRuleSLDXML();						var record = new thematicLayers_grid_record({			sld_id:thematicLayers_SelectedSLD_ID,			sld_full_id:"",			graphicLegend:legendGraphic,			sld:thematicLayer_this_sld,			title:thematicLayer_Rule_Title,			styleobejct:styleObject		});				if (thematicLayers_SelectedSLD_ID_EDIT>=1)		{			Ext.MessageBox.confirm(thematicLayerSaveRuleTitleMsg,thematicLayerSaveRuleTextMsg,function(ans){										if (ans=="yes")				{					thematicLayers_style_grid_tmp_store.add(record);										thematicLayers_SelectedSLD_ID++;										thematicLayers_addNewRule_commit();				}				else				{														var editRecordIndex = thematicLayers_style_grid_tmp_store.find('sld_id', thematicLayers_SelectedSLD_ID_EDIT);										var editRecord=thematicLayers_style_grid_tmp_store.getAt(editRecordIndex);										editRecord.set("graphicLegend",record.get("graphicLegend"));					editRecord.set("sld",record.get("sld"));					editRecord.set("sld_full_id","");					editRecord.set("title",record.get("title"));					editRecord.set("styleobejct",record.get("styleobejct"));										thematicLayers_addNewRule_commit();										thematicLayers_SelectedSLD_ID_EDIT="";														}			});					}else		{			thematicLayers_style_grid_tmp_store.add(record);						thematicLayers_SelectedSLD_ID++;						thematicLayers_addNewRule_commit();		}			}		thematicLayers_SLD_add_criteria_count=0;}function thematicLayers_addNewRule_commit(){	thematicLayers_style_grid_tmp_store.commitChanges();			Ext.getCmp('thematicLayer_grid').reconfigure(thematicLayers_style_grid_tmp_store,thematicLayers_style_grid_columns);			Ext.getCmp('thematicLayer_grid').getSelectionModel().clearSelections();			thematicLayers_AddNewRuleClearAll();						thematicLayers_SLD_add_criteria_count=0;}var thematicLayersSaveSLDToXML_Ajax;var thematicLayers_LayerTitle_Window=new Ext.Window({	title:thematicLayerTitleToMap,	width:365,	height:87,	modal:true,	resizable:false,	closeAction:'hide',	plain:true,	listeners:{		show:function(){					mapPanel.layers.each(function(layer){								if ((layer.get("layers_basename_id")==thematicLayers_BaseNameLayerId) )					{						Ext.getCmp('thematicLayer_LayerTitleToMap').setValue(layer.get("layer_title"));					}			});								}	},	items:[{		xtype:'form',		bbar:['->',{			xtype:'button',			text:thematicLayerBtnAddToMap,			handler:function(){														thematicLayersAddToMapTree();							}		},{			xtype:'button',			text:thematicLayerBtnCancel,			handler:function(){								thematicLayers_LayerTitle_Window.hide();			}		}],		items:[{			xtype:'textfield',			fieldLabel:thematicLayerTitleToMap,			id:'thematicLayer_LayerTitleToMap',			width:200		}]	}]});var thematicLayersCreateAjaxFile;function thematicLayersAddToMapTree(){	var cleanSLD=thematicLayers_CreateAllSLDXML();		cleanSLD=cleanSLD.replace(/(\r\n|\n|\r|\t)/gm,"");		if (typeof thematicLayersSaveSLDToXML_Ajax!=="undefined")	{		Ext.Ajax.abort(thematicLayersSaveSLDToXML_Ajax);	}		if (thematicLayers_fileBased==true)	{		if(typeof thematicLayersCreateAjaxFile!=="undefined")		{			Ext.Ajax.abort(thematicLayersCreateAjaxFile);		}				thematicLayersCreateAjaxFile=Ext.Ajax.request({			url:"modules/thematicLayers/php/thematicLayersCreateXML.php",			timeout:5000,			method: "POST",			params:{"sld":cleanSLD},			success:function(result,response)			{				var sld_file=Ext.decode(result.responseText);							thematicLayers_AddToMapStoreUpdate(sld_file);			},			failure:function()			{				thematicLayers_AddToMapStoreUpdate(cleanSLD);			}		});				}	else	{		thematicLayers_AddToMapStoreUpdate(cleanSLD);	}}function thematicLayers_AddToMapStoreUpdate(cleanSLD){	thematicLayers_SLD_ID++;		var bboxSplit=mapPanel.layers.getAt(thematicNodeIndexLayer).get('bbox').split(',');		var minx=bboxSplit[0];	var miny=bboxSplit[1];	var maxx=bboxSplit[2];	var maxy=bboxSplit[3];		var thematicLayers_LayerTitle=Ext.getCmp('thematicLayer_LayerTitleToMap').getValue();		var thematicLayers_layer_record =Ext.data.Record.create([		{name: "Title", type: "string"},		{name: "URL", type: "string"},		{name: "Name", type: "string"},		{name: "outputFormat", type: "string"},		{name: "version", type: "string"},		{name: "crs", type: "string"},		{name: "authentication", type: "string"},		{name: "Abstract", type: "string"},		{name: "Minx", type: "string"},		{name: "Miny", type: "string"},		{name: "Maxx", type: "string"},		{name: "Maxy", type: "string"},		{name: "URL_Title", type: "string"},		{name: "sld_body", type: "string"},		{name: "sld_id", type: "string"},		{name: "sld_legent_graphic", type: "string"}	]);		var record=new thematicLayers_layer_record({		Title:thematicLayers_LayerTitle,		URL:mapPanel.layers.getAt(thematicNodeIndexLayer).get('source_id'),		Name:mapPanel.layers.getAt(thematicNodeIndexLayer).get('layers_basename'),		outputFormat:mapPanel.layers.getAt(thematicNodeIndexLayer).get('outputFormat'),		version:mapPanel.layers.getAt(thematicNodeIndexLayer).get('service_version'),		crs:mapPanel.layers.getAt(thematicNodeIndexLayer).get('layers_crs'),		layer_namespace:mapPanel.layers.getAt(thematicNodeIndexLayer).get('layer_namespace'),		authentication:mapPanel.layers.getAt(thematicNodeIndexLayer).get('service_authentication'),		Abstract:mapPanel.layers.getAt(thematicNodeIndexLayer).get('abstract'),		Minx:minx,		Miny:miny,		Maxx:maxx,		Maxy:maxy,		URL_Title:mapPanel.layers.getAt(thematicNodeIndexLayer).get('service_name'),		queryable:mapPanel.layers.getAt(thematicNodeIndexLayer).get('queryable'),		sld_body:cleanSLD,		sld_id:thematicLayers_SLD_ID,		sld_legent_graphic:cleanSLD	});			var service_type=mapPanel.layers.getAt(thematicNodeIndexLayer).get('service_type');					thematicLayers_style_grid_tmp_store.each(function(record_tmp){							record_tmp.set("sld_full_id",thematicLayers_SLD_ID);						thematicLayers_style_grid_tmp_store.commitChanges();				var copyRecord = new thematicLayers_grid_record({			sld_id:record_tmp.get("sld_id"),			sld_full_id:record_tmp.get("sld_full_id"),			graphicLegend:record_tmp.get("graphicLegend"),			sld:record_tmp.get("sld"),			title:record_tmp.get("title"),			service_type:service_type,			styleobejct:record_tmp.get("styleobejct")		});					thematicLayers_style_grid_store.add(copyRecord);					thematicLayers_style_grid_store.commitChanges();			});		if (thematicLayers_BaseNameLayerId!="")	{		Ext.MessageBox.confirm(thematicLayerAddToTitleMsg,thematicLayerAddToTextMsg,function(ans){								if (ans=="yes")			{								if (service_type=="WMS")				{					wms_registerLayer(record);				}				if (service_type=="WFST")				{					wfst_registerLayer(record);				}				if (service_type=="WFS")				{					wfs_registerLayer(record);				}					thematicLayer.hide();								map_search_getLayers();			}			else			{							mapPanel.layers.each(function(layer){								if ((layer.get("layers_basename_id")==thematicLayers_BaseNameLayerId) )					{						layer.set("layer_title",thematicLayers_LayerTitle);												layer.set("layers_sld",thematicLayers_SLD_ID);													if (thematicLayers_fileBased==false)						{							rec_sld_body=cleanSLD.replace(/(\r\n|\n|\r|\t)/gm,"");															rec_graphic="&SLD_BODY="+cleanSLD.replace(/(\r\n|\n|\r|\t)/gm,"");						}						if (thematicLayers_fileBased==true)						{							rec_sld_body=cleanSLD;															rec_graphic="&SLD="+cleanSLD;						}												var authentication=layer.get("service_authentication");						if (authentication!="")						{							authentication+="&";						}												var newIcon="php_source/proxies/legend_graphic.php?"+authentication+"urlGraphic="+Ext.urlAppend(layer.get("source_id"),"REQUEST=GetLegendGraphic&VERSION=1.1.1&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER="+layer.get("layers_basename")+"&"+rec_graphic);												if (service_type!="WMS")						{							var towms=layer.get("source_id");														towms=towms.replace(/wfs/gm, 'wms');							towms=towms.replace(/WFS/gm, 'WMS');														newIcon="php_source/proxies/legend_graphic.php?"+authentication+"urlGraphic="+Ext.urlAppend(towms,"REQUEST=GetLegendGraphic&VERSION=1.1.1&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER="+layer.get("layers_basename")+"&"+rec_graphic);						}												layer.set("icon",newIcon);												layer.set("layer_icon",newIcon);												var editNode=Ext.getCmp('layerTree_layers').getNodeById(thematicLayers_TreeMapNodeId);												editNode.setIcon(newIcon);												editNode.setText(thematicLayers_LayerTitle);												thematicLayers_TreeMapNodeId="";												layer.get("layer").options.sld_body = rec_sld_body;						layer.get("layer").sld_body = rec_sld_body;														layer.set("sld_body",rec_sld_body);														layer.set("layers_basename_id",layer.get("URL")+"_"+layer.get("Name")+"_"+thematicLayers_SLD_ID);						layer.get("layer").redraw(true);					}				});								thematicLayer.hide();								map_search_getLayers();			}		});	}	else	{		if (service_type=="WMS")		{			wms_registerLayer(record);		}		if (service_type=="WFST")		{			wfst_registerLayer(record);		}		if (service_type=="WFS")		{			wfs_registerLayer(record);		}			thematicLayer.hide();				map_search_getLayers();	}		Ext.getCmp('thematicLayer_LayerTitleToMap').setValue('');			thematicLayers_style_grid_tmp_store.data.clear();			Ext.getCmp('thematicLayer_grid').reconfigure(thematicLayers_style_grid_tmp_store,thematicLayers_style_grid_columns);			thematicLayers_LayerTitle_Window.hide();		thematicLayers_SLD_add_criteria_count=0;		}function thematicLayers_createXMLFromSLDCriteria(){	thematicLayers_SLD_XML="";		var output="";		if (thematicLayers_SLD_add_criteria_count>0)	{		Ext.getCmp('thematicLayersSLD_andor_'+(thematicLayers_SLD_add_criteria_count-1)).setValue("");		output="<ogc:Filter>";				for(var i=0;i<thematicLayers_SLD_add_criteria_count;i++)		{				if (Ext.getCmp('thematicLayersSLD_andor_'+i).getValue()=="AND")			{				output+="<ogc:And>";			}			if (Ext.getCmp('thematicLayersSLD_andor_'+i).getValue()=="OR")			{				output+="<ogc:Or>";			}						var criteria=Ext.getCmp('thematicLayersSLD_criteria_contition_'+i).getValue();						switch(criteria)			{				case "=":					output+="<ogc:PropertyIsEqualTo>";					output+="<ogc:PropertyName>";					output+=Ext.getCmp('thematicLayersSLD_criteria_att_name_'+i).getValue();					output+="</ogc:PropertyName>";					output+="<ogc:Literal>";					output+=Ext.getCmp('thematicLayersSLD_criteria_value_'+i).getValue();					output+="</ogc:Literal>";					output+="</ogc:PropertyIsEqualTo>";				break;								case ">":					output+="<ogc:PropertyIsGreaterThan>";					output+="<ogc:PropertyName>";					output+=Ext.getCmp('thematicLayersSLD_criteria_att_name_'+i).getValue();					output+="</ogc:PropertyName>";					output+="<ogc:Literal>";					output+=Ext.getCmp('thematicLayersSLD_criteria_value_'+i).getValue();					output+="</ogc:Literal>";					output+="</ogc:PropertyIsGreaterThan>";				break;								case ">=":					output+="<ogc:PropertyIsGreaterThanOrEqualTo>";					output+="<ogc:PropertyName>";					output+=Ext.getCmp('thematicLayersSLD_criteria_att_name_'+i).getValue();					output+="</ogc:PropertyName>";					output+="<ogc:Literal>";					output+=Ext.getCmp('thematicLayersSLD_criteria_value_'+i).getValue();					output+="</ogc:Literal>";					output+="</ogc:PropertyIsGreaterThanOrEqualTo>";				break;								case "<":					output+="<ogc:PropertyIsLessThan>";					output+="<ogc:PropertyName>";					output+=Ext.getCmp('thematicLayersSLD_criteria_att_name_'+i).getValue();					output+="</ogc:PropertyName>";					output+="<ogc:Literal>";					output+=Ext.getCmp('thematicLayersSLD_criteria_value_'+i).getValue();					output+="</ogc:Literal>";					output+="</ogc:PropertyIsLessThan>";				break;								case "<=":					output+="<ogc:PropertyIsLessThanOrEqualTo>";					output+="<ogc:PropertyName>";					output+=Ext.getCmp('thematicLayersSLD_criteria_att_name_'+i).getValue();					output+="</ogc:PropertyName>";					output+="<ogc:Literal>";					output+=Ext.getCmp('thematicLayersSLD_criteria_value_'+i).getValue();					output+="</ogc:Literal>";					output+="</ogc:PropertyIsLessThanOrEqualTo>";				break;								case "LIKE":					output+="<ogc:PropertyIsLike wildCard='%' singleChar='.' escape='!'>";					output+="<ogc:PropertyName>";					output+=Ext.getCmp('thematicLayersSLD_criteria_att_name_'+i).getValue();					output+="</ogc:PropertyName>";					output+="<ogc:Literal>";					output+=Ext.getCmp('thematicLayersSLD_criteria_value_'+i).getValue();					output+="</ogc:Literal>";					output+="</ogc:PropertyIsLike>";				break;						}						if (Ext.getCmp('thematicLayersSLD_andor_'+i).getValue()=="AND")			{				output+="</ogc:And>";			}			if (Ext.getCmp('thematicLayersSLD_andor_'+i).getValue()=="OR")			{				output+="</ogc:Or>";			}		}				output+="</ogc:Filter>";	}		return output;}function thematicLayers_addSLDRowCriteria(edit){	var previous_criteria_count=thematicLayers_SLD_add_criteria_count-1;		if ((previous_criteria_count>-1) && (edit==false))	{		if (Ext.getCmp("thematicLayersSLD_andor_"+previous_criteria_count).getValue()=="")		{			Ext.getCmp("thematicLayersSLD_andor_"+previous_criteria_count).setValue("AND");		}	}		var thematicLayers_SLDRows=new Ext.Panel({		layout:'hbox',		border:false,		anchor:"10",		items:[		{			xtype:'label',			text:map_search_form_criteria_label,			style:'margin: 3',			width:60		},		{			xtype:'combo',			loadMask:true,			autoScroll:true,			displayField: 'translation',			valueField: 'name',			id:"thematicLayersSLD_criteria_att_name_"+thematicLayers_SLD_add_criteria_count,			autoShow: true,			store:thematicLayers_SLD_attributes_store,			selectOnFocus: true,			triggerAction:'all',			width:90,			mode: 'remote',			editable: false,			listeners:{				select:function(combo,record){									var map_search_condition_new = Ext.data.Record.create([							{name: "name", type: "string"},							{name: "value", type: "string"},							{name: "value_type", type: "string"}						]);										Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).store.removeAll();										if (record.get("type")=="string")					{						Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).store.add(new map_search_condition_new({name:"=",value:"=",value_type:"string"}));						Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).store.add(new map_search_condition_new({name:"LIKE",value:"LIKE",value_type:"string"}));						Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).store.add(new map_search_condition_new({name:"NOT LIKE",value:"NOT LIKE",value_type:"string"}));					}else					{						Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).store.add(new map_search_condition_new({name:"=",value:"=",value_type:"numeric"}));						Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).store.add(new map_search_condition_new({name:">=",value:">=",value_type:"numeric"}));						Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).store.add(new map_search_condition_new({name:">",value:">",value_type:"numeric"}));						Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).store.add(new map_search_condition_new({name:"<=",value:"<=",value_type:"numeric"}));						Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).store.add(new map_search_condition_new({name:"<",value:"<",value_type:"numeric"}));					}										Ext.getCmp("thematicLayersSLD_criteria_contition_"+(thematicLayers_SLD_add_criteria_count-1)).setValue("=");				}						}		},		{			xtype:'label',			text:map_search_form_condition_label,			style:'margin: 3',			width:60		},		{			xtype:'combo',			loadMask:true,			autoScroll:true,			id:"thematicLayersSLD_criteria_contition_"+thematicLayers_SLD_add_criteria_count,			autoShow: true,			width:50,			store: new Ext.data.SimpleStore({			fields: ['name','value'],				data: []			}), 			displayField: 'name',			valueField: 'value',			emptyText:'',			forceSelection: true,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: false		},		{			xtype:'label',			text:map_search_form_value_label,			style:'margin: 3',			width:40		},		{			xtype:'textfield',			id:"thematicLayersSLD_criteria_value_"+thematicLayers_SLD_add_criteria_count,			width:100		},		{			xtype:'combo',			loadMask:true,			autoScroll:true,			autoShow: true,			width:50,			store: new Ext.data.SimpleStore({			fields: ['name','value'],				data: [["AND","AND"],["OR","OR"]]			}), 			displayField: 'name',			id:"thematicLayersSLD_andor_"+thematicLayers_SLD_add_criteria_count,			valueField: 'value',			forceSelection: true,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: false		},		{			xtype:'button',			iconCls:'mapTree_remove16',			handler:function()			{				Ext.getCmp('thematicLayers_SLDCriteria_panel_id').remove(thematicLayers_SLDRows);				Ext.getCmp('thematicLayers_SLDCriteria_panel_id').doLayout();				thematicLayers_SLD_add_criteria_count--;			}		}]	});		Ext.getCmp('thematicLayers_SLDCriteria_panel_id').add(thematicLayers_SLDRows);	Ext.getCmp('thematicLayers_SLDCriteria_panel_id').doLayout();		thematicLayers_SLD_add_criteria_count++;}function thematicLayers_PointPanel(){	var thematicPanel=[{		xtype: 'fieldset',		title:thematicLayer_Point_Symbol_FieldSet,		id:'thematicLayer_Point_Symbol_FieldSet_Id',		checkboxToggle: true,		collapsed: true,		width:300,		items:[{			xtype:'combo',			fieldLabel:thematicLayer_Point_Symbol,			id:'thematicLayer_Point_Symbol',			width: 150,			emptyText:thematicLayerBorderStyle_none,			store: new Ext.data.SimpleStore({				fields: ['name','value'],				data: [[thematicLayerBorderStyle_square,"square"],				[thematicLayerBorderStyle_circle,"circle"],				[thematicLayerBorderStyle_triangle,"triangle"],				[thematicLayerBorderStyle_star,"star"],				[thematicLayerBorderStyle_cross,"cross"],				[thematicLayerBorderStyle_squarex,"x"]]}			),			displayField: 'name',			valueField: 'value',			forceSelection: true,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: false		},		{			xtype:'combo',			fieldLabel:thematicLayer_Point_Size,			id:'thematicLayer_Point_Size',			emptyText:"",			store: new Ext.data.SimpleStore({				fields: ['name','value'],				data: [["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["12","12"],["14","14"],["17","17"],["18","18"]]}			),			displayField: 'name',			valueField: 'value',			width:50,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: true		},		{			xtype:'textfield',			fieldLabel:thematicLayer_Point_Rotation,			id:'thematicLayer_Point_Rotation',			width:50		}]	},	{		xtype: 'fieldset',		title:thematicLayer_Point_Fill_FieldSet,		id:'thematicLayer_Point_Fill_FieldSet_Id',		checkboxToggle: true,		width:300,		collapsed: true,		items:[{			xtype:'textfield',			fieldLabel:thematicLayer_Point_Fill_Color,			id:'thematicLayer_Point_Fill_Color',			width:100,			listeners:{				'focus':function(el)				{					showColorpickerWindow(el.id,el.getValue());				}									}		},		{			xtype:'slider',			fieldLabel:thematicLayer_Point_Fill_Opacity,			id:'thematicLayer_Point_Fill_Opacity',			width: 150,			value:10,			increment: 1,			minValue: 0,			maxValue: 10		}]	},	{		xtype: 'fieldset',		title:thematicLayer_Point_Stroke_FieldSet,		id:'thematicLayer_Point_Stroke_FieldSet_Id',		checkboxToggle: true,		width:300,		collapsed: true,		items:[{			xtype:'combo',			fieldLabel:thematicLayer_Point_Stroke_Style,			id:'thematicLayer_Point_Stroke_Style',			emptyText:thematicLayerBorderStyle_none,			store: new Ext.data.SimpleStore({				fields: ['name','value'],				data: [				[thematicLayerBorderStyle_none,"none"],				[thematicLayerBorderStyle_solid_line,"solid"],				[thematicLayerBorderStyle_dash,"dash"],				[thematicLayerBorderStyle_dot,"dot"]]}			),			displayField: 'name',			width: 150,			valueField: 'value',			forceSelection: true,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: false		},		{			xtype:'textfield',			fieldLabel:thematicLayer_Point_Stroke_Color,			id:'thematicLayer_Point_Stroke_Color',			width:100,			listeners:{				'focus':function(el)				{					showColorpickerWindow(el.id,el.getValue());				}			}		},		{			xtype:'combo',			fieldLabel:thematicLayer_Point_Stroke_Width,			id:'thematicLayer_Point_Stroke_Width',			emptyText:"",			store: new Ext.data.SimpleStore({				fields: ['name','value'],				data: [["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["12","12"],["14","14"],["17","17"],["18","18"]]}			),			displayField: 'name',			valueField: 'value',			width:50,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: true		},		{			xtype:'slider',			fieldLabel:thematicLayer_Point_Stroke_Opacity,			id:'thematicLayer_Point_Stroke_Opacity',			width: 150,			value:10,			increment: 1,			minValue: 0,			maxValue: 10		}]	}];	return thematicPanel;}function thematicLayers_PointSLD(){	var output="";	/*thematicLayer_Point_Symbol*/	var thematicLayer_Point_Symbol=Ext.getCmp('thematicLayer_Point_Symbol').getValue();	var thematicLayer_Point_SymbolSLD="";	if (thematicLayer_Point_Symbol!="")	{		thematicLayer_Point_SymbolSLD="<WellKnownName>"+thematicLayer_Point_Symbol+"</WellKnownName>";	}		/*thematicLayer_Point_Size*/	var thematicLayer_Point_Size=Ext.getCmp('thematicLayer_Point_Size').getValue();	var thematicLayer_Point_SizeSLD="";	if (thematicLayer_Point_Size!="")	{		thematicLayer_Point_SizeSLD="<Size>"+thematicLayer_Point_Size+"</Size>";	}		/*thematicLayer_Point_Rotation*/	var thematicLayer_Point_Rotation=Ext.getCmp('thematicLayer_Point_Rotation').getValue();	var thematicLayer_Point_RotationSLD="";	if (thematicLayer_Point_Rotation!="")	{		thematicLayer_Point_RotationSLD="<Rotation>"+thematicLayer_Point_Rotation+"</Rotation>";	}		/*thematicLayer_Point_Fill_Color*/	var thematicLayer_Point_Fill_Color=Ext.getCmp('thematicLayer_Point_Fill_Color').getValue();	var thematicLayer_Point_Fill_ColorSLD="";	if (thematicLayer_Point_Fill_Color!="")	{		thematicLayer_Point_Fill_ColorSLD="<CssParameter name='fill'>0x"+thematicLayer_Point_Fill_Color+"</CssParameter>";	}		/*thematicLayer_Point_Fill_Opacity*/	var thematicLayer_Point_Fill_Opacity=Ext.getCmp('thematicLayer_Point_Fill_Opacity').getValue();	var thematicLayer_Point_Fill_OpacitySLD="";	if (thematicLayer_Point_Fill_Opacity!="")	{		if (thematicLayer_Point_Fill_Opacity!="0")		{			thematicLayer_Point_Fill_Opacity=thematicLayer_Point_Fill_Opacity/10;		}				thematicLayer_Point_Fill_OpacitySLD="<CssParameter name='fill-opacity'>"+thematicLayer_Point_Fill_Opacity+"</CssParameter>";	}		var thematicLayer_Point_Fill_SLD="";		if (thematicLayer_Point_Fill_Color!="")	{		if ((thematicLayer_Point_Fill_ColorSLD!="") || (thematicLayer_Point_Fill_OpacitySLD!=""))		{			thematicLayer_Point_Fill_SLD="<Fill>"+thematicLayer_Point_Fill_ColorSLD+thematicLayer_Point_Fill_OpacitySLD+"</Fill>";		}	}		/*thematicLayer_Point_Symbol*/	var thematicLayer_Point_Stroke_Style=Ext.getCmp('thematicLayer_Point_Stroke_Style').getValue();	var thematicLayer_Point_Stroke_StyleSLD="";	if ((thematicLayer_Point_Stroke_Style!="") && (thematicLayer_Point_Stroke_Style!="none") && (thematicLayer_Point_Stroke_Style!="solid"))	{		if (thematicLayer_Point_Stroke_Style=="dash")		{			thematicLayer_Point_Stroke_StyleSLD="<CssParameter name='stroke-dasharray'>5 5</CssParameter>";		}		if (thematicLayer_Point_Stroke_Style=="dot")		{			thematicLayer_Point_Stroke_StyleSLD="<CssParameter name='stroke-dasharray'>1 4</CssParameter>";		}	}		/*thematicLayer_Point_Stroke_Color*/	var thematicLayer_Point_Stroke_Color=Ext.getCmp('thematicLayer_Point_Stroke_Color').getValue();	var thematicLayer_Point_Stroke_ColorSLD="";	if (thematicLayer_Point_Stroke_Color!="")	{		thematicLayer_Point_Stroke_ColorSLD="<CssParameter name='stroke'>0x"+thematicLayer_Point_Stroke_Color+"</CssParameter>";	}		/*thematicLayer_Point_Stroke_Width*/	var thematicLayer_Point_Stroke_Width=Ext.getCmp('thematicLayer_Point_Stroke_Width').getValue();	var thematicLayer_Point_Stroke_WidthSLD="";	if (thematicLayer_Point_Stroke_Width!="")	{		thematicLayer_Point_Stroke_WidthSLD="<CssParameter name='stroke-width'>"+thematicLayer_Point_Stroke_Width+"</CssParameter>";	}		/*thematicLayer_Point_Stroke_Opacity*/	var thematicLayer_Point_Stroke_Opacity=Ext.getCmp('thematicLayer_Point_Stroke_Opacity').getValue();	var thematicLayer_Point_Stroke_OpacitySLD="";	if (thematicLayer_Point_Stroke_Opacity!="")	{		if (thematicLayer_Point_Stroke_Opacity!="0")		{			thematicLayer_Point_Stroke_Opacity=thematicLayer_Point_Stroke_Opacity/10;		}				thematicLayer_Point_Stroke_OpacitySLD="<CssParameter name='stroke-opacity'>"+thematicLayer_Point_Stroke_Opacity+"</CssParameter>";	}			var thematicLayer_Point_Stroke_SLD="";		if ((thematicLayer_Point_Stroke_Style!="") || (thematicLayer_Point_Stroke_Style!="none"))	{		if ((thematicLayer_Point_Stroke_StyleSLD!="") || (thematicLayer_Point_Stroke_ColorSLD!="") || (thematicLayer_Point_Stroke_WidthSLD!="") || (thematicLayer_Point_Stroke_OpacitySLD!=""))		{			thematicLayer_Point_Stroke_SLD="<Stroke>"+thematicLayer_Point_Stroke_StyleSLD+thematicLayer_Point_Stroke_ColorSLD+thematicLayer_Point_Stroke_WidthSLD+thematicLayer_Point_Stroke_OpacitySLD+"</Stroke>";		}	}	var thematicLayer_Rule_Name=Ext.getCmp('thematicLayer_Rule_Name').getValue();	var thematicLayer_Rule_Title=Ext.getCmp('thematicLayer_Rule_Title').getValue();	var thematicLayer_Rule_Abstract=Ext.getCmp('thematicLayer_Rule_Abstract').getValue();			var output="<Rule><Name>"+thematicLayer_Rule_Name+"</Name><Title>"+thematicLayer_Rule_Title+"</Title><Abstract>"+thematicLayer_Rule_Abstract+"</Abstract>"+thematicLayers_createXMLFromSLDCriteria()+"<PointSymbolizer><Graphic><Mark>"+thematicLayer_Point_SymbolSLD+thematicLayer_Point_Fill_SLD+thematicLayer_Point_Stroke_SLD+"</Mark>"+thematicLayer_Point_SizeSLD+"</Graphic></PointSymbolizer>"+thematicLayer_TextSymbolizerSLD()+"</Rule>";		return output;	}function thematicLayers_LinePanel(){	var thematicPanel=[{		xtype: 'fieldset',		title:thematicLayer_Line_Stroke_FieldSet,		id:'thematicLayer_Line_Stroke_FieldSet_Id',		checkboxToggle: true,		width:300,		collapsed: true,		items:[{			xtype:'combo',			fieldLabel:thematicLayer_Line_Stroke_Style,			id:'thematicLayer_Line_Stroke_Style',			emptyText:thematicLayerBorderStyle_none,			store: new Ext.data.SimpleStore({				fields: ['name','value'],				data: [				[thematicLayerBorderStyle_none,"none"],				[thematicLayerBorderStyle_solid_line,"solid"],				[thematicLayerBorderStyle_dash,"dash"],				[thematicLayerBorderStyle_dot,"dot"]]}			),			displayField: 'name',			valueField: 'value',			forceSelection: true,			width: 150,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: false,			listeners:{				select:function(combo,record)				{					if ((record.get("value")=="none") || (record.get("value")==""))					{						Ext.getCmp("thematicLayer_Line_Stroke_Color").setValue("");					}				}						}		},		{			xtype:'textfield',			fieldLabel:thematicLayer_Line_Stroke_Color,			id:'thematicLayer_Line_Stroke_Color',			width:100,			listeners:{				'focus':function(el)				{					showColorpickerWindow(el.id,el.getValue());				}									}		},		{			xtype:'combo',			fieldLabel:thematicLayer_Line_Stroke_Width,			id:'thematicLayer_Line_Stroke_Width',			emptyText:"",			store: new Ext.data.SimpleStore({				fields: ['name','value'],				data: [["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["12","12"],["14","14"],["17","17"],["18","18"]]}			),			displayField: 'name',			valueField: 'value',			width:50,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: true		},		{			xtype:'slider',			fieldLabel:thematicLayer_Line_Stroke_Opacity,			id:'thematicLayer_Line_Stroke_Opacity',			width: 150,			value:10,			increment: 1,			minValue: 0,			maxValue: 10		}]	}];	return thematicPanel;}function thematicLayers_LineSLD(){	var output="";		/*thematicLayer_Line_Symbol*/	var thematicLayer_Line_Stroke_Style=Ext.getCmp('thematicLayer_Line_Stroke_Style').getValue();	var thematicLayer_Line_Stroke_StyleSLD="";	if ((thematicLayer_Line_Stroke_Style!="") && (thematicLayer_Line_Stroke_Style!="none") && (thematicLayer_Line_Stroke_Style!="solid"))	{		if (thematicLayer_Line_Stroke_Style=="dash")		{			thematicLayer_Line_Stroke_StyleSLD="<CssParameter name='stroke-dasharray'>5 5</CssParameter>";		}		if (thematicLayer_Line_Stroke_Style=="dot")		{			thematicLayer_Line_Stroke_StyleSLD="<CssParameter name='stroke-dasharray'>1 4</CssParameter>";		}	}		/*thematicLayer_Line_Stroke_Color*/	var thematicLayer_Line_Stroke_Color=Ext.getCmp('thematicLayer_Line_Stroke_Color').getValue();	var thematicLayer_Line_Stroke_ColorSLD="";	if (thematicLayer_Line_Stroke_Color!="")	{		thematicLayer_Line_Stroke_ColorSLD="<CssParameter name='stroke'>0x"+thematicLayer_Line_Stroke_Color+"</CssParameter>";	}		/*thematicLayer_Line_Stroke_Width*/	var thematicLayer_Line_Stroke_Width=Ext.getCmp('thematicLayer_Line_Stroke_Width').getValue();	var thematicLayer_Line_Stroke_WidthSLD="";	if (thematicLayer_Line_Stroke_Width!="")	{		thematicLayer_Line_Stroke_WidthSLD="<CssParameter name='stroke-width'>"+thematicLayer_Line_Stroke_Width+"</CssParameter>";	}		/*thematicLayer_Line_Stroke_Opacity*/	var thematicLayer_Line_Stroke_Opacity=Ext.getCmp('thematicLayer_Line_Stroke_Opacity').getValue();	var thematicLayer_Line_Stroke_OpacitySLD="";	if (thematicLayer_Line_Stroke_Opacity!="")	{		if (thematicLayer_Line_Stroke_Opacity!="0")		{			thematicLayer_Line_Stroke_Opacity=thematicLayer_Line_Stroke_Opacity/10;		}				thematicLayer_Line_Stroke_OpacitySLD="<CssParameter name='stroke-opacity'>"+thematicLayer_Line_Stroke_Opacity+"</CssParameter>";	}			var thematicLayer_Line_Stroke_SLD="";		if ((thematicLayer_Line_Stroke_Style!="none") && (thematicLayer_Line_Stroke_Style!=""))	{		if ((thematicLayer_Line_Stroke_StyleSLD!="") || (thematicLayer_Line_Stroke_ColorSLD!="") || (thematicLayer_Line_Stroke_WidthSLD!="") || (thematicLayer_Line_Stroke_OpacitySLD!=""))		{			thematicLayer_Line_Stroke_SLD="<Stroke>"+thematicLayer_Line_Stroke_StyleSLD+thematicLayer_Line_Stroke_ColorSLD+thematicLayer_Line_Stroke_WidthSLD+thematicLayer_Line_Stroke_OpacitySLD+"</Stroke>";		}	}		var thematicLayer_Rule_Name=Ext.getCmp('thematicLayer_Rule_Name').getValue();	var thematicLayer_Rule_Title=Ext.getCmp('thematicLayer_Rule_Title').getValue();	var thematicLayer_Rule_Abstract=Ext.getCmp('thematicLayer_Rule_Abstract').getValue();			var output="<Rule><Name>"+thematicLayer_Rule_Name+"</Name><Title>"+thematicLayer_Rule_Title+"</Title><Abstract>"+thematicLayer_Rule_Abstract+"</Abstract>"+thematicLayers_createXMLFromSLDCriteria()+"<LineSymbolizer>"+thematicLayer_Line_Stroke_SLD+"</LineSymbolizer>"+thematicLayer_TextSymbolizerSLD()+"</Rule>";		return output;	}function thematicLayers_PolygonPanel(){	var thematicPanel=[{		xtype: 'fieldset',		title:thematicLayer_Polygon_Fill_FieldSet,		id:'thematicLayer_Polygon_Fill_FieldSet_Id',		checkboxToggle: true,		width:300,		collapsed: true,		items:[{			xtype:'combo',			fieldLabel:thematicLayer_Polygon_Fill_Symbol,			id:'thematicLayer_Polygon_Fill_Symbol',			emptyText:thematicLayerFillStyle_none,			store: new Ext.data.SimpleStore({				fields: ['name','value'],				data: [[thematicLayerFillStyle_none,"None"],				[thematicLayerFillStyle_simpleFill,"Fill"],				[thematicLayerFillStyle_vertical,"shape://vertline"],				[thematicLayerFillStyle_horizontal,"shape://horline"],				[thematicLayerFillStyle_slash,"shape://slash"],				[thematicLayerFillStyle_backslash,"shape://backslash"],				[thematicLayerFillStyle_dot,"shape://dot"],				[thematicLayerFillStyle_plus,"shape://plus"],				[thematicLayerFillStyle_x,"shape://times"],				[thematicLayerFillStyle_oarrow,"shape://oarrow"],				[thematicLayerFillStyle_carrow,"shape://carrow"]]}			),			displayField: 'name',			valueField: 'value',			forceSelection: true,			triggerAction: 'all',			width: 150,			selectOnFocus: false,			mode: 'local',			editable: false		},		{			xtype:'textfield',			fieldLabel:thematicLayer_Polygon_Fill_Color,			id:'thematicLayer_Polygon_Fill_Color',			width:100,			listeners:{				'focus':function(el)				{					showColorpickerWindow(el.id,el.getValue());				}									}		},		{			xtype:'slider',			fieldLabel:thematicLayer_Polygon_Fill_Opacity,			id:'thematicLayer_Polygon_Fill_Opacity',			width: 150,			value:10,			increment: 1,			minValue: 0,			maxValue: 10		}]	},	{		xtype: 'fieldset',		title:thematicLayer_Polygon_Stroke_FieldSet,		id:'thematicLayer_Polygon_Stroke_FieldSet_Id',		checkboxToggle: true,		width:300,		collapsed: true,		items:[{			xtype:'combo',			fieldLabel:thematicLayer_Polygon_Stroke_Style,			id:'thematicLayer_Polygon_Stroke_Style',			emptyText:thematicLayerBorderStyle_none,			store: new Ext.data.SimpleStore({				fields: ['name','value'],				data: [				[thematicLayerBorderStyle_none,"none"],				[thematicLayerBorderStyle_solid_line,"solid"],				[thematicLayerBorderStyle_dash,"dash"],				[thematicLayerBorderStyle_dot,"dot"]]}			),			displayField: 'name',			valueField: 'value',			forceSelection: true,			width: 150,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: false		},		{			xtype:'textfield',			fieldLabel:thematicLayer_Polygon_Stroke_Color,			id:'thematicLayer_Polygon_Stroke_Color',			width:100,			listeners:{				'focus':function(el)				{					showColorpickerWindow(el.id,el.getValue());				}									}		},		{			xtype:'combo',			fieldLabel:thematicLayer_Polygon_Stroke_Width,			id:'thematicLayer_Polygon_Stroke_Width',			emptyText:"",			store: new Ext.data.SimpleStore({				fields: ['name','value'],				data: [["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["12","12"],["14","14"],["17","17"],["18","18"]]}			),			displayField: 'name',			valueField: 'value',			width:50,			triggerAction: 'all',			selectOnFocus: false,			mode: 'local',			editable: true		},		{			xtype:'slider',			fieldLabel:thematicLayer_Polygon_Stroke_Opacity,			id:'thematicLayer_Polygon_Stroke_Opacity',			width: 150,			value:10,			increment: 1,			minValue: 0,			maxValue: 10		}]	}];	return thematicPanel;}function thematicLayers_PolygonSLD(){	var output="";		/*thematicLayer_Polygon_Fill_Symbol*/	var thematicLayer_Polygon_Fill_Symbol=Ext.getCmp('thematicLayer_Polygon_Fill_Symbol').getValue();	var thematicLayer_Polygon_Fill_SymbolSLD="";	if (thematicLayer_Polygon_Fill_Symbol!="")	{		if ((thematicLayer_Polygon_Fill_Symbol!="Fill") && (thematicLayer_Polygon_Fill_Symbol!="") && (thematicLayer_Polygon_Fill_Symbol!="none"))		{			thematicLayer_Polygon_Fill_SymbolSLD="<WellKnownName>"+thematicLayer_Polygon_Fill_Symbol+"</WellKnownName>";		}			}		/*thematicLayer_Polygon_Fill_Color*/	var thematicLayer_Polygon_Fill_Color=Ext.getCmp('thematicLayer_Polygon_Fill_Color').getValue();	var thematicLayer_Polygon_Fill_ColorSLD="";	if (thematicLayer_Polygon_Fill_Color!="")	{		thematicLayer_Polygon_Fill_ColorSLD="<CssParameter name='fill'>0x"+thematicLayer_Polygon_Fill_Color+"</CssParameter>";	}		/*thematicLayer_Polygon_Fill_Opacity*/	var thematicLayer_Polygon_Fill_Opacity=Ext.getCmp('thematicLayer_Polygon_Fill_Opacity').getValue();	var thematicLayer_Polygon_Fill_OpacitySLD="";	if (thematicLayer_Polygon_Fill_Opacity!="")	{		if (thematicLayer_Polygon_Fill_Opacity!="0")		{			thematicLayer_Polygon_Fill_Opacity=thematicLayer_Polygon_Fill_Opacity/10;		}				thematicLayer_Polygon_Fill_OpacitySLD="<CssParameter name='fill-opacity'>"+thematicLayer_Polygon_Fill_Opacity+"</CssParameter>";	}		var thematicLayer_Polygon_Fill_SLD="";		if ((thematicLayer_Polygon_Fill_Symbol!="") && (thematicLayer_Polygon_Fill_Symbol!="none"))	{		if ((thematicLayer_Polygon_Fill_ColorSLD!="") || (thematicLayer_Polygon_Fill_OpacitySLD!=""))		{			if (thematicLayer_Polygon_Fill_SymbolSLD!="")			{				if (thematicLayer_Polygon_Fill_Color!="")				{					thematicLayer_Polygon_Fill_ColorSLD="<CssParameter name='stroke'>0x"+thematicLayer_Polygon_Fill_Color+"</CssParameter>";				}								if (thematicLayer_Polygon_Fill_Opacity!="")				{					thematicLayer_Polygon_Fill_OpacitySLD="<CssParameter name='stroke-opacity'>"+thematicLayer_Polygon_Fill_Opacity+"</CssParameter>";				}								var thematicLayer_Polygon_StrokeSymbol="";								if ((thematicLayer_Polygon_Fill_Color!="") || (thematicLayer_Polygon_Fill_Opacity!=""))				{					thematicLayer_Polygon_StrokeSymbol="<Stroke>"+thematicLayer_Polygon_Fill_ColorSLD+thematicLayer_Polygon_Fill_OpacitySLD+"</Stroke>";				}								thematicLayer_Polygon_Fill_SLD="<Fill><GraphicFill><Graphic><Mark>"+thematicLayer_Polygon_Fill_SymbolSLD+thematicLayer_Polygon_StrokeSymbol+"</Mark></Graphic></GraphicFill></Fill>";			}			else			{				thematicLayer_Polygon_Fill_SLD="<Fill>"+thematicLayer_Polygon_Fill_ColorSLD+thematicLayer_Polygon_Fill_OpacitySLD+"</Fill>";			}		}	}			/*thematicLayer_Polygon_Symbol*/	var thematicLayer_Polygon_Stroke_Style=Ext.getCmp('thematicLayer_Polygon_Stroke_Style').getValue();	var thematicLayer_Polygon_Stroke_StyleSLD="";	if ((thematicLayer_Polygon_Stroke_Style!="") && (thematicLayer_Polygon_Stroke_Style!="none")  && (thematicLayer_Polygon_Stroke_Style!="solid"))	{		if (thematicLayer_Polygon_Stroke_Style=="dash")		{			thematicLayer_Polygon_Stroke_StyleSLD="<CssParameter name='stroke-dasharray'>5 5</CssParameter>";		}		if (thematicLayer_Polygon_Stroke_Style=="dot")		{			thematicLayer_Polygon_Stroke_StyleSLD="<CssParameter name='stroke-dasharray'>1 4</CssParameter>";		}	}		/*thematicLayer_Polygon_Stroke_Color*/	var thematicLayer_Polygon_Stroke_Color=Ext.getCmp('thematicLayer_Polygon_Stroke_Color').getValue();	var thematicLayer_Polygon_Stroke_ColorSLD="";	if ((thematicLayer_Polygon_Stroke_Color!="") && (typeof thematicLayer_Polygon_Stroke_Color!=="undefined"))	{		thematicLayer_Polygon_Stroke_ColorSLD="<CssParameter name='stroke'>0x"+thematicLayer_Polygon_Stroke_Color+"</CssParameter>";	}		/*thematicLayer_Polygon_Stroke_Width*/	var thematicLayer_Polygon_Stroke_Width=Ext.getCmp('thematicLayer_Polygon_Stroke_Width').getValue();	var thematicLayer_Polygon_Stroke_WidthSLD="";	if (thematicLayer_Polygon_Stroke_Width!="")	{		thematicLayer_Polygon_Stroke_WidthSLD="<CssParameter name='stroke-width'>"+thematicLayer_Polygon_Stroke_Width+"</CssParameter>";	}		/*thematicLayer_Polygon_Stroke_Opacity*/	var thematicLayer_Polygon_Stroke_Opacity=Ext.getCmp('thematicLayer_Polygon_Stroke_Opacity').getValue();	var thematicLayer_Polygon_Stroke_OpacitySLD="";		if (thematicLayer_Polygon_Stroke_Opacity!="")	{		if (thematicLayer_Polygon_Stroke_Opacity!="0")		{			thematicLayer_Polygon_Stroke_Opacity=thematicLayer_Polygon_Stroke_Opacity/10;		}				thematicLayer_Polygon_Stroke_OpacitySLD="<CssParameter name='stroke-opacity'>"+thematicLayer_Polygon_Stroke_Opacity+"</CssParameter>";	}			var thematicLayer_Polygon_Stroke_SLD="";	if ((thematicLayer_Polygon_Stroke_Style!="none") || (thematicLayer_Polygon_Stroke_Style!=""))	{		if ((thematicLayer_Polygon_Stroke_StyleSLD!="") || (thematicLayer_Polygon_Stroke_ColorSLD!="") || (thematicLayer_Polygon_Stroke_WidthSLD!="") || (thematicLayer_Polygon_Stroke_OpacitySLD!=""))		{			thematicLayer_Polygon_Stroke_SLD="<Stroke>"+thematicLayer_Polygon_Stroke_StyleSLD+thematicLayer_Polygon_Stroke_ColorSLD+thematicLayer_Polygon_Stroke_WidthSLD+thematicLayer_Polygon_Stroke_OpacitySLD+"</Stroke>";		}	}		var thematicLayer_Rule_Name=Ext.getCmp('thematicLayer_Rule_Name').getValue();	var thematicLayer_Rule_Title=Ext.getCmp('thematicLayer_Rule_Title').getValue();	var thematicLayer_Rule_Abstract=Ext.getCmp('thematicLayer_Rule_Abstract').getValue();			var output="<Rule><Name>"+thematicLayer_Rule_Name+"</Name><Title>"+thematicLayer_Rule_Title+"</Title><Abstract>"+thematicLayer_Rule_Abstract+"</Abstract>"+thematicLayers_createXMLFromSLDCriteria()+"<PolygonSymbolizer>"+thematicLayer_Polygon_Fill_SLD+thematicLayer_Polygon_Stroke_SLD+"</PolygonSymbolizer>"+thematicLayer_TextSymbolizerSLD()+"</Rule>";		return output;	}function thematicLayer_TextSymbolizerSLD(){		var thematicLayer_Label_Attribute=Ext.getCmp('thematicLayer_Label_Attribute_id').getValue();	var thematicLayer_Label_AttributeSLD="";	if (thematicLayer_Label_Attribute!="")	{		thematicLayer_Label_AttributeSLD="<Label><ogc:PropertyName>"+thematicLayer_Label_Attribute+"</ogc:PropertyName></Label>";	}		var thematicLayer_Label_FontFamily=Ext.getCmp('thematicLayer_Label_FontFamily_id').getValue();	var thematicLayer_Label_FontFamilySLD="";	if (thematicLayer_Label_FontFamily!="")	{		thematicLayer_Label_FontFamilySLD="<CssParameter name='font-family'>"+thematicLayer_Label_FontFamily+"</CssParameter>";	}		var thematicLayer_Label_FontSize=Ext.getCmp('thematicLayer_Label_FontSize_id').getValue();	var thematicLayer_Label_FontSizeSLD="";	if (thematicLayer_Label_FontSize!="")	{		thematicLayer_Label_FontSizeSLD="<CssParameter name='font-size'>"+thematicLayer_Label_FontSize+"</CssParameter>";	}		var thematicLayer_Label_FontColor=Ext.getCmp('thematicLayer_Label_FontColor_id').getValue();	var thematicLayer_Label_FontColorSLD="";	if (thematicLayer_Label_FontColor!="")	{		thematicLayer_Label_FontColorSLD="<CssParameter name='font-color'>0x"+thematicLayer_Label_FontColor+"</CssParameter>";	}		var thematicLayer_Label_Font="";	if ((thematicLayer_Label_FontFamilySLD!="") || (thematicLayer_Label_FontSizeSLD!="") || (thematicLayer_Label_FontColorSLD!=""))	{		thematicLayer_Label_Font="<Font>"+thematicLayer_Label_FontFamilySLD+thematicLayer_Label_FontSizeSLD+thematicLayer_Label_FontColorSLD+"</Font>";	}		var output="";		if (thematicLayer_Label_AttributeSLD!="")	{		output="<TextSymbolizer>"+thematicLayer_Label_AttributeSLD+thematicLayer_Label_Font+"<LabelPlacement><PointPlacement auto='true'/></LabelPlacement></TextSymbolizer>";	}		return output;}