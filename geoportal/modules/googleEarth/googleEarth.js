/*version message*/var ge = null;var googleEarthInstance=false;var googleEarthKML=new Array();google.load("earth", "1");var googleEarthMode=false;var googleEarthSettings={	GE_settings_status_bar:false,	GE_settings_grid:false,	GE_settings_overview_map:false,	GE_settings_scale_legend:false,	GE_settings_atmosphere:false}var googleEarthOptionsBtn=new Ext.Button({	iconCls:'ge_control_settings_icon',	tooltip:google_earth_control_btn_GE_settings,	id:'google_earth_settings_btn_id',	menu:[{			text:google_earth_control_btn_GE_settings_status_bar,			checked:googleEarthSettings.GE_settings_status_bar,			hideOnClick:false,			listeners:{				checkchange:function(check){									ge.getOptions().setStatusBarVisibility(check.checked);					googleEarthSettings.GE_settings_status_bar=check.checked;				}						}		},		{			text:google_earth_control_btn_GE_settings_grid,			checked:googleEarthSettings.GE_settings_grid,			hideOnClick:false,			listeners:{				checkchange:function(check){									ge.getOptions().setGridVisibility(check.checked);					googleEarthSettings.GE_settings_grid=check.checked;				}						}		},		{			text:google_earth_control_btn_GE_settings_overview_map,			checked:googleEarthSettings.GE_settings_overview_map,			hideOnClick:false,			listeners:{				checkchange:function(check){									ge.getOptions().setOverviewMapVisibility(check.checked);					googleEarthSettings.GE_settings_overview_map=check.checked;				}						}		},		{			text:google_earth_control_btn_GE_settings_scale_legend,			checked:googleEarthSettings.GE_settings_scale_legend,			hideOnClick:false,			listeners:{				checkchange:function(check){									ge.getOptions().setScaleLegendVisibility(check.checked);					googleEarthSettings.GE_settings_scale_legend=check.checked;				}						}		},		{			text:google_earth_control_btn_GE_settings_scale_atmosphere,			checked:googleEarthSettings.GE_settings_atmosphere,			hideOnClick:false,			listeners:{				checkchange:function(check){									ge.getOptions().setAtmosphereVisibility(check.checked);					googleEarthSettings.GE_settings_atmosphere=check.checked;				}						}		},		{			text:google_earth_control_btn_GE_menu_hide,			handler:function(){									Ext.getCmp('google_earth_settings_btn_id').hideMenu();			}		}]});function initGe() {	if (!googleEarthMode)	{				googleEarthMode=true;				var geh=Ext.getCmp('map_center_panel').getHeight();			Ext.getCmp('map_center_panel').hide();					if (!googleEarthInstance)		{			var gePanel=new Ext.Panel({				id:'ge_panel',				height:geh,				html:"<div id='map_ge_region' style='z-index:1000;'></div>"							});						googleEarthInstance=true;			Ext.getCmp('center_region').add(gePanel);				Ext.getCmp('center_region').doLayout();						google.earth.createInstance("map_ge_region", initCallbackGE, failureCallbackGE);												Ext.getCmp('map_controls_tab_general_id').add(googleEarthOptionsBtn);					Ext.getCmp('map_controls_tab_general_id').doLayout();								}		else		{			Ext.getCmp('ge_panel').show();						setTimeout(function(){loadKMLfromMapPanelGE(ge);gotoGEfromOL(ge);},500);						Ext.getCmp('google_earth_settings_btn_id').show();					}								changeViewPortFunctionality();				Ext.getCmp('ge_btn').setIconClass('ge_control_openlayers_icon');				Ext.getCmp('ge_btn').setTooltip(google_earth_control_btn_Openlayers);				toggleTreeLayersGE(Ext.getCmp('layerTree_layers').getNodeById("treeMap_baselayers"),false);			}	else	{				googleEarthMode=false;				changeViewPortFunctionality();				Ext.getCmp('google_earth_settings_btn_id').hide();				Ext.getCmp('ge_panel').hide();				Ext.getCmp('center_region').doLayout();				Ext.getCmp('map_center_panel').show();				Ext.getCmp('ge_btn').setIconClass('ge_control_icon');					toggleLayersNodeIfEPSGNotSupported(Ext.getCmp('layerTree_layers').root,map_currentMapProjection,"");				toggleTreeLayersGE(Ext.getCmp('layerTree_layers').root,true);				Ext.getCmp('ge_btn').setTooltip(google_earth_control_btn_GE);								if(typeof map!=="undefined")			map.updateSize();			}}function changeViewPortFunctionality(){	if (googleEarthMode)	{		Ext.getCmp('map_north_tabs').setActiveTab('map_controls_tab_general_id');		Ext.getCmp('map_controls_tab_search_id').disable();				Ext.getCmp('map_controls_tab_general_id').items.each(function(item) {			if ((item.id!="ge_btn") && (item.id!="google_earth_settings_btn_id")){			item.disable();}		});			}else	{		Ext.getCmp('map_north_tabs').setActiveTab('map_controls_tab_general_id');		Ext.getCmp('map_controls_tab_search_id').enable();				Ext.getCmp('map_controls_tab_general_id').items.each(function(item) {			item.enable();		});	}}function gotoGEfromOL(object){	var map_current_center;		if (map.getProjectionObject().toString()!="EPSG:4326")	{		map_current_center=map.getCenter().transform(new OpenLayers.Projection(map.getProjectionObject().toString()), new OpenLayers.Projection("EPSG:4326"));	}else	{		map_current_center=map.getCenter();	}  	var lon=Number(map_current_center.lon);	var lat=Number(map_current_center.lat);		gotoLocationGE(lat,lon,map.getScale()-100000,object);}function initCallbackGE(object) {	ge = object;	ge.getWindow().setVisibility(true);	ge.getNavigationControl().setVisibility(ge.VISIBILITY_AUTO);	ge.getNavigationControl().getScreenXY().setXUnits(ge.UNITS_PIXELS);	ge.getNavigationControl().getScreenXY().setYUnits(ge.UNITS_INSET_PIXELS);  	loadKMLfromMapPanelGE(object);	gotoGEfromOL(object);		Ext.getCmp('layerTree_layers').on('append', function() {		if (googleEarthMode==true)		{						if (Ext.getCmp('ge_btn').iconCls.toString()=="ge_control_icon"){setTimeout(function(){loadKMLfromMapPanelGE(ge);},500);}		}	});		Ext.getCmp('layerTree_layers').on('remove', function() {		if (googleEarthMode==true)		{						if (Ext.getCmp('ge_btn').iconCls.toString()=="ge_control_icon"){setTimeout(function(){loadKMLfromMapPanelGE(ge);},500);}		}	});	}function failureCallbackGE(object) {}function gotoLocationGE(lat,lng,range,ge){	var lookAt = ge.createLookAt(''); 	lookAt.setLatitude(lat);	lookAt.setLongitude(lng);	lookAt.setRange(range);    ge.getView().setAbstractView(lookAt); }function loadKMLfromMapPanelGE(ge){		if (googleEarthMode==true)	{		var features = ge.getFeatures();				while (features.getFirstChild())		{			features.removeChild(features.getFirstChild());		}	   		toggleLayersNodeIfEPSGNotSupported(Ext.getCmp('layerTree_layers').root,"EPSG:4326",tooltip_mapTree_notSupportedGoogleEarth);	   		mapPanel.layers.each(function(layer){					var service_type=layer.get("service_type");			if ((service_type=="WMS") || (service_type=="KML"))			{				var layer_url=layer.get("source_id");								var layer_id=layer.get("layer").id;								if (Ext.getCmp('layerTree_layers').getNodeById(layer_id).attributes.checked==true)				{					var layer_icon=layer.get("layer_icon");										var layer_hasWGS=fc_returnHasWGS(layer.get("layers_crs"));										if (layer_hasWGS)					{						alreadyLoadedGE(layer_id);											var layer_bbox=layer.get("bbox");												var layer_basename=layer.get('layers_basename');												var service_authentication=layer.get('service_authentication');												var arrayBounds=OpenLayers.Bounds.fromString(layer_bbox);																		var w_dominator=100;						var h_dominator=100;												if ((arrayBounds.getSize().w)<1)						{							w_dominator=1000;						}						if ((arrayBounds.getSize().h)<1)						{							h_dominator=1000;						}												var width=Math.round((arrayBounds.getSize().w)*w_dominator);												var height=Math.round((arrayBounds.getSize().h)*h_dominator);												var arrayBoundsString=OpenLayers.Bounds.fromString(layer_bbox).toString();												changeLoadingIconLayerTreeGE(layer_id,layer_icon,"loadStart",tooltip_mapTree_loadingGoogleEarth);												layer.set("layers_sld",thematicLayers_SLD_ID);												var rec_sld_body="";												if (typeof layer.get("sld_body")!=="undefined")						{							if (thematicLayers_fileBased==false)							{								rec_sld_body="&SLD_BODY="+layer.get("sld_body");							}							if (thematicLayers_fileBased==true)							{								rec_sld_body="&SLD="+layer.get("sld_body");							}						}												var download_url=Ext.urlAppend(layer_url,"REQUEST=GetMap&SERVICE=WMS&VERSION=1.1.1&LAYERS="+layer_basename+"&FORMAT=kml&SRS=EPSG:4326&BBOX="+arrayBoundsString+"&WIDTH="+width+"&HEIGHT="+height+rec_sld_body);												if (service_authentication!="")						{							service_authentication+="&";						}												var kml_url=getsdiportal_URI+"php_source/proxies/fetchKML.php?"+service_authentication+"url="+download_url;												if (service_type=="KML")						{														if (layer.get("kml_type")=="file")							{								kml_url=getsdiportal_URI+layer.get('layers_basename');							}							if (layer.get("kml_type")=="web")							{								kml_url=getsdiportal_URI+"php_source/proxies/fetchKML.php?nocache&url="+layer.get('layers_basename');							}						}																	setTimeout(function(){														google.earth.fetchKml(ge, kml_url, function(kmlObject) 							{																if (kmlObject)								{																		googleEarthKML[layer_id]=kmlObject;																		ge.getFeatures().appendChild(kmlObject);																		changeLoadingIconLayerTreeGE(layer_id,layer_icon,"loadSuccess","");																	}								else								{																		changeLoadingIconLayerTreeGE(layer_id,layer_icon,"loadFailure",tooltip_mapTree_notSupportedGoogleEarth);								}															});													},500);										}					else					{						try						{							ge.getFeatures().removeChild(googleEarthKML[layer_id]);						}catch(err){}						}				}				else				{					try					{						ge.getFeatures().removeChild(googleEarthKML[layer_id]);					}catch(err){}				}			}			else			{				toggleLayerNodeIfEPSGNotSupported(layer,false,tooltip_mapTree_notSupportedGoogleEarth);			}		});	}}function alreadyLoadedGE(layer_id){	if(googleEarthKML[layer_id]==undefined)	{		Ext.getCmp('layerTree_layers').getNodeById(layer_id).on('checkchange', function(){loadKMLfromMapPanelGE(ge);});	}}function changeLoadingIconLayerTreeGE(layer_id,layer_icon,state,tootltip){	if (googleEarthMode)	{		switch(state)		{			case "loadStart":				Ext.getCmp('layerTree_layers').getNodeById(layer_id).setIcon("images/gis_icons/loading.gif");				Ext.getCmp('layerTree_layers').getNodeById(layer_id).disable();				Ext.getCmp('layerTree_layers').getNodeById(layer_id).setTooltip(tootltip);				Ext.getCmp('layerTree_databases').getNodeById(layer_id).setIcon("images/gis_icons/loading.gif");				Ext.getCmp('layerTree_databases').getNodeById(layer_id).disable();				Ext.getCmp('layerTree_databases').getNodeById(layer_id).setTooltip(tootltip);				Ext.getCmp('layerTree_services').getNodeById(layer_id).setIcon("images/gis_icons/loading.gif");				Ext.getCmp('layerTree_services').getNodeById(layer_id).disable();				Ext.getCmp('layerTree_services').getNodeById(layer_id).setTooltip(tootltip);			break;						case "loadSuccess":								Ext.getCmp('layerTree_layers').getNodeById(layer_id).setIcon(layer_icon);				Ext.getCmp('layerTree_layers').getNodeById(layer_id).enable();				Ext.getCmp('layerTree_layers').getNodeById(layer_id).setTooltip(tootltip);				Ext.getCmp('layerTree_databases').getNodeById(layer_id).setIcon(layer_icon);				Ext.getCmp('layerTree_databases').getNodeById(layer_id).enable();				Ext.getCmp('layerTree_databases').getNodeById(layer_id).setTooltip(tootltip);				Ext.getCmp('layerTree_services').getNodeById(layer_id).setIcon(layer_icon);				Ext.getCmp('layerTree_services').getNodeById(layer_id).enable();				Ext.getCmp('layerTree_services').getNodeById(layer_id).setTooltip(tootltip);			break;						case "loadFailure":				Ext.getCmp('layerTree_layers').getNodeById(layer_id).setIcon(layer_icon);				Ext.getCmp('layerTree_layers').getNodeById(layer_id).disable();				Ext.getCmp('layerTree_layers').getNodeById(layer_id).setTooltip(tootltip);				Ext.getCmp('layerTree_databases').getNodeById(layer_id).setIcon(layer_icon);				Ext.getCmp('layerTree_databases').getNodeById(layer_id).disable();				Ext.getCmp('layerTree_databases').getNodeById(layer_id).setTooltip(tootltip);				Ext.getCmp('layerTree_services').getNodeById(layer_id).setIcon(layer_icon);				Ext.getCmp('layerTree_services').getNodeById(layer_id).disable();				Ext.getCmp('layerTree_services').getNodeById(layer_id).setTooltip(tootltip);			break;					}	}	else	{		toggleTreeLayersGE(Ext.getCmp('layerTree_layers').root,true);	}}function toggleTreeLayersGE(node,toggleValue){	node.eachChild(function(n){		if (toggleValue==false)		{			n.disable();			n.setTooltip(tooltip_mapTree_notBaseLayerGoogleEarth);		}		else		{			try			{				n.enable();				n.setTooltip("");								var numLayer=mapPanel.map.layers.indexOf(n.layer);								n.setIcon(mapPanel.layers.getAt(numLayer).get("layer_icon"));								if (numLayer>0)				n.setIcon(mapPanel.layers.getAt(numLayer).get("layer_icon"));			}catch(err){}						if(n.hasChildNodes())				toggleTreeLayersGE(n,toggleValue);		}	});}